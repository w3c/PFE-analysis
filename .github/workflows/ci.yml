on: [push, pull_request]
name: Continous Integration
jobs:
  check_tests_ubuntu:
    name: Check Tests (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Mount bazel cache
        uses: actions/cache@v1
        with:
          path: "/home/runner/.cache/bazel"
          key: bazel

      - name: Install bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.1.0/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"

      - name: Test
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" test //analysis/... //common/... //patch_subset/... //tools/... //util/... //woff2_py/... --test_output=all
        env:
          CC: gcc-9

      - name: Build Webassembly
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" build --copt=-Os --config=wasm js_client:patch_subset_wasm.js
        env:
          CC: gcc-9

  check_tests_osx:
    name: Check Tests (Mac OS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master

      - name: Install bazel
        run: |
          curl -L -O "https://github.com/bazelbuild/bazel/releases/download/3.7.1/bazel-3.7.1-installer-darwin-x86_64.sh"
          chmod a+x ./bazel-3.7.1-installer-darwin-x86_64.sh
          ./bazel-3.7.1-installer-darwin-x86_64.sh

      - name: Run Tests
        run: bazel test //analysis/... //common/... //patch_subset/... //tools/... //util/... //woff2_py/... --test_output=all

      - name: Build WebAssembly
        run: bazel build --copt=-Os --config=wasm js_client:patch_subset_wasm.js
    
  check_formatting:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v1

      - name: Install clang
        run: |
          wget "http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz" -O clang.tar.xz
          tar xf clang.tar.xz
          cd clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04
          sudo cp -R * /usr/local
          cd ..
          rm -rf clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04

      - name: Instal yapf and pyling
        run: |
          pip install yapf
          pip install pylint

      - name: Run Check Script
        run: ./check-format.sh
